{"version":3,"sources":["BoxThing.js","App.js","reportWebVitals.js","index.js","catto3.jpg"],"names":["BoxSystem","_React$Component","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","generateBoxes","boxCount","state","badBoxes","boxes","i","searchNumber","url","concat","includes","push","React","createElement","key","className","href","setState","fetchData","handleButtonClick","_inherits","_createClass","value","Component","ToggleableHeading","ReactMarkdown","children","components","code","_ref","node","inline","_objectWithoutProperties","match","exec","SyntaxHighlighter","Object","assign","String","replace","style","atomDark","language","PreTag","MarkdownDiv","remarkPlugins","remarkGfm","Tests","Catto","src","cat","alt","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","module","exports","p"],"mappings":"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","file":"static/js/main.b60cdc13.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass BoxSystem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      boxCount: 100, // Number of boxes to generate\r\n      boxes: [] // Array to hold the dynamically created boxes\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.generateBoxes();\r\n  }\r\n\r\n  generateBoxes = () => {\r\n    const { boxCount } = this.state;\r\n    const badBoxes = [15, 17, 27, 32, 34, 35, 36, 37, 38, 39, 40, 41, 47, 52, 53, 54, 55, 56, 61, 68, 76, 78, 79, 80, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 97, 98, 100];\r\n    const boxes = [];\r\n\r\n    for (let i = 1; i <= boxCount; i++) {\r\n      var searchNumber = i;\r\n        if (searchNumber < 10) {\r\n            searchNumber = \"00\" + searchNumber;\r\n        } else if (searchNumber < 100) {\r\n            searchNumber = \"0\" + searchNumber;\r\n        }\r\n      var url = `https://raw.githubusercontent.com/kakuttaja/project-euler/main/${searchNumber}.py`\r\n      if (badBoxes.includes(i)) {\r\n        boxes.push(\r\n          <a key={i} className=\"box2\">\r\n            {i}\r\n          </a>\r\n        )\r\n      } else { \r\n        boxes.push(\r\n          <a key={i} href={url} className=\"box\">\r\n            {i}\r\n          </a>\r\n        );\r\n      }\r\n    }\r\n\r\n    this.setState({ boxes });\r\n  };\r\n\r\n  fetchData = () => {\r\n    // Implement your fetch logic here\r\n    \r\n  };\r\n\r\n  handleButtonClick = () => {\r\n    this.fetchData();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"box-container\">{this.state.boxes}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoxSystem;","import React, { useState } from 'react';\nimport './App.css';\nimport cat from './catto3.jpg';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter';\nimport {atomDark} from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport { GetEulerSolution, CreateBoxes, FetchCompletedSolutions } from './EulerFetcher.js'\nimport BoxSystem from './BoxThing.js';\n\n\nfunction ToggleableHeading() {\n  const pythonCode = `\n  ~~~python\n  # This is just an example Python code block (checks if n is a prime number)\n  def is_prime(n: int) -> bool:\n    if n <= 1:\n      return False\n    elif n == 2:\n      return True\n    elif n % 2 == 0:\n      return False\n    for i in range(3, int(n ** 0.5) + 1, 2):\n      if n % i == 0:\n        return False\n    return True\n  ~~~\n  `\n  return (\n    <div className=\"CodeBlock\">\n      {/* Jesus, what is this code*/}\n      <ReactMarkdown\n      children={pythonCode}\n      components={{\n        code({node, inline, className, children, ...props}) {\n          const match = /language-(\\w+)/.exec(className || '')\n          return !inline && match ? (\n            <SyntaxHighlighter\n              {...props}\n              children={String(children).replace(/\\n$/, '')}\n              style={atomDark}\n              language={match[1]}\n              PreTag=\"div\"\n            />\n          ) : (\n            <code {...props} className={className}>\n              {children}\n            </code>\n          )\n        }\n      }}/>\n    </div>\n  );\n}\n\nfunction MarkdownDiv() {\n  const markdownText = `\n  This is an example Markdown div to show an example of markdown usage \n  with [*GitHub Flavored Markdown*](https://github.github.com/gfm/). \n  Made with [React](https://react.dev/) just to try out something new, \n  using the [React-markdown](https://github.com/remarkjs/react-markdown) component for markdown rendering.\n  GitHub Flavored Markdown is nice as it supports footnotes[^1] and has nice in-line tables support as well.\n\n  Just | Like | So\n  :---: | :---: | :---:\n  Simplicity | Is | Nice.\n  \n  [^1]: Footnotes thanks to gfm.\n  `\n  const newText = `\n  A placeholder text for a thing that is a complete mess.\n\n  For now, has links to some of my Project Euler solutions. I guess.\n\n  TODO: Everything.\n  `\n  return (\n    <div\n    className=\"MarkdownDiv\">\n      {/* <h3 className=\"MarkdownHeading\">Cake!</h3> */}\n      <ReactMarkdown remarkPlugins={[remarkGfm]}>\n        {/* {markdownText} */}\n      {newText}\n      </ReactMarkdown>\n      <BoxSystem/>\n      <ToggleableHeading/>\n    </div>\n  )\n}\n\nfunction Tests() {\n  return (\n    <div \n    className=\"Test\">\n      <div\n        className=\"transitionDiv\" >\n        <p className=\"CakeTest\">This is a cake-test component.</p>\n      </div>\n    </div>\n  );\n}\n\nfunction Catto() {\n  return (  \n    <a className=\"CatDiv\" href=\"https://github.com/kakuttaja\">\n      <img src={cat} className=\"App-logo\" alt=\"logo\"/>\n    </a>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <MarkdownDiv />\n        <Catto />\n        <p className=\"Cake\">\n          Cake\n        </p>\n        <Tests />\n      </header>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/catto3.38c593f4.jpg\";"],"sourceRoot":""}